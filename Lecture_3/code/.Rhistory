dfSurvey2 <- read_excel("C:/Users/Martijn/Desktop/coding repositories/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- read_excel(".../Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- read_excel("../Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- read_excel(path = "../Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- read_excel("/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- read_excel("~/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- read_excel("../Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
View(dfSurvey2)
View(dfSurvey2)
dfSurvey2 <- dfSurvey2 %>%
rename(
Country =...1,
`2019`= `2019...51`
hyh\
dfSurvey2 <- dfSurvey2 %>%
+     rename(
+         Country =...1,
+         `2019`= `2019...51`)
dfSurvey2 <- dfSurvey2 %>%
+     rename(
+         Country =...1,)
dfSurvey2 <- dfSurvey2 %>% rename(Country =...1,`2019`= `2019...51`)
dfSurvey2 <- dfSurvey2 %>% select("2011:2019")
Data <- dfSurvey2 %>% select(1,43:51)
Data <- Data %>% slice_head(n = 5)
# Here your code
dfSurvey2 <- read_excel("C:/Users/Martijn/Desktop/coding repositories/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- dfSurvey2 %>% rename(Country =...1,`2019`= `2019...51`)
Data <- dfSurvey2 %>% select(1,43:51)
Data <- Data %>% slice_head(n = 5)
View(Data)
View(Data)
# Here your code
df2 <- pivot_longer(Data)
# Here your code
df2 <- pivot_longer(Data, cols = Country)
View(df2)
# Here your code
df2 <- pivot_longer(Data, cols = Country, Year)
# Here your code
df2 <- pivot_longer(Data, cols = `2011`:`2019`)
# Here your code
df2 <- pivot_longer(Data, cols = `2011`:`2019`, names_to = `Year`, values_to = `Expenditure`)
# Here your code
df2 <- pivot_longer(Data, cols = `2011`:`2019`, names_to = "Year", values_to = "Expenditure")
# Here your code
library(tidyverse)
library(readxl)
# Run this code
data1 <- data.frame(
Hospital = c("Gigant", "Moloch", "Mega"),
Revenue = c(100, 95, 90),
stringsAsFactors = FALSE
)
print(data1)
# Run this code
data2 <- data.frame(
Hospital = c("Gigant", "Moloch", "Maverick"),
Profit = c(10, 11, 5),
stringsAsFactors = FALSE
)
print(data2)
# Here your code
merged_dataframe <- merge(data1, data2)
# Here your code
merged_dataframe <- full_join(data1, data2)
# Here your code
merged_dataframe <- inner_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframe <- left_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframe <- right_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframe <- anti_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframe <- semi_join(data1, data2, by = "Hospital")
data2a <- data2 %>%
arrange(-Profit)
print(data2a)
# Here your code
merged_dataframe <- cbind(data1, data2a)
data1a <- data.frame(
Hospital = c("Giga"),
Revenue = c("1000")
)
print(data1a)
# Here your code
merged_dataframe <- rbind(data1a, data1)
# Here your code
dfSurvey2 <- read_excel("C:/Users/Martijn/Desktop/coding repositories/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- dfSurvey2 %>% rename(Country =...1,`2019`= `2019...51`)
Data <- dfSurvey2 %>% select(1,43:51)
Data <- Data %>% slice_head(n = 5)
# Here your code
df2 <- pivot_longer(Data, cols = `2011`:`2019`, names_to = "Year", values_to = "Expenditure")
# Here your code
dfSurvey2 <- read_excel("C:/Users/Martijn/Desktop/coding repositories/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- dfSurvey2 %>% rename(Country =...1,`2019`= `2019...51`)
Data <- dfSurvey2 %>% select(1,43:51)
Data <- Data %>% slice_head(n = 5)
dfSurvey2
# Here your code
df2 <- pivot_longer(Data, cols = `2011`:`2019`, names_to = "Year", values_to = "Expenditure")
df2
# Here your code
df2$Year <- as.integer(df2$Year)
str(df2)
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line()
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1))
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic()
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df3 <- df2 %>%
filter(Year== 2018, 2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018:2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018:2019)
df3
View(df3)
View(df3)
View(df2)
View(df2)
# Here your code
df3 <- df2 %>%
filter(Year== 2018)
df3
# Here your code
df3 <- df2 %>%
filter(Year== 2018 or 2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018|2019)
df3
# Here your code
df3 <- df2 %>%
filter(Year== 2018|2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018)
# Here your code
df3 <- df2 %>%
filter(Year== 2018) %>%
filter(Year == 2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018 | 2011)
View(df3)
# Here your code
df3 <- df2 %>%
filter(Year== 2018 & 2019)
View(df3)
View(df3)
# Here your code
df3 <- df2 %>%
filter(Year== `2018` & 2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018 & 2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2019 & 2019)
View(df3)
View(df3)
# Here your code
df3 <- df2 %>%
filter(Year== 2019 & 2011)
# Here your code
df3 <- df2 %>%
filter(Year== 2018 & Year == 2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018 | Year == 2019)
View(df3)
View(df3)
# Here your code
df3 <- df2 %>%
filter(Year== 2018 | Year == 2019)
# Here your code
df3 <- df2 %>%
filter(Year== 2018 | Year == 2019)
df3
# Here your code
df4 <- df3 %>%
pivot_wider(names_from = Year, values_from = Expenditure)
# Here your code
df4 <- df3 %>%
pivot_wider(names_from = Year, values_from = Expenditure)
df4
# Here your code
df5 <- df4 %>%
mutate(Growth = (`2019` - `2018`)/`2018`)
# Here your code
df5 <- df4 %>%
mutate(Growth = (`2019` - `2018`)/`2018`)
df5
# Here your code
ggplot(df5, aes(x = reorder(Country, -Growth), y = Growth, fill = Country)) +
geom_bar(stat = "identity")
# Here your code
ggplot(df5, aes(x = reorder(Country, -Growth), y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
# Here your code
merged_dataframe <- semi_join(data1, data2, by = "Hospital")
# Here your code
library(tidyverse)
library(readxl)
# Here your code
merged_dataframe <- full_join(data1, data2)
View(merged_dataframe)
# Here your code
merged_dataframe1 <- inner_join(data1, data2, by = "Hospital")
View(merged_dataframe1)
# Here your code
merged_dataframe <- left_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframe2 <- left_join(data1, data2, by = "Hospital")
View(merged_dataframe2)
# Here your code
merged_dataframe3 <- right_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframe6 <- semi_join(data1, data2, by = "Hospital")
View(merged_dataframe6)
# Here your code
library(tidyverse)
library(readxl)
# Run this code
data1 <- data.frame(
Hospital = c("Gigant", "Moloch", "Mega"),
Revenue = c(100, 95, 90),
stringsAsFactors = FALSE
)
print(data1)
# Run this code
data1 <- tibble(
Hospital = c("Gigant", "Moloch", "Mega"),
Revenue = c(100, 95, 90),
stringsAsFactors = FALSE
)
print(data1)
View(data1)
View(data1)
# Run this code
data2 <- data.frame(
Hospital = c("Gigant", "Moloch", "Maverick"),
Profit = c(10, 11, 5),
stringsAsFactors = FALSE
)
print(data2)
# Run this code
data2 <- tibble(
Hospital = c("Gigant", "Moloch", "Maverick"),
Profit = c(10, 11, 5),
stringsAsFactors = FALSE
)
print(data2)
# Here your code
merged_dataframe <- merge(data1, data2)
# Here your code
merged_dataframe <- merge(data1, data2, by = the_key)
View(merged_dataframe)
View(merged_dataframe)
View(merged_dataframe)
View(merged_dataframe)
# Here your code
merged_dataframe13 <- merge(data1, data2, by = hospital)
# Here your code
merged_dataframe13 <- merge(data1, data2, by = Hospital)
# Here your code
merged_dataframe13 <- merge(data1, data2, by = "Hospital")
View(merged_dataframe13)
View(merged_dataframe13)
# Here your code
merged_dataframefull <- full_join(data1, data2)
View(merged_dataframefull)
View(merged_dataframefull)
View(merged_dataframe)
View(merged_dataframe)
# Here your code
merged_dataframe1 <- inner_join(data1, data2, by = "Hospital")
View(merged_dataframe1)
View(merged_dataframefull)
# Here your code
merged_dataframe2 <- left_join(data1, data2, by = "Hospital")
View(merged_dataframe2)
# Here your code
merged_dataframe3 <- right_join(data1, data2, by = "Hospital")
View(merged_dataframe3)
# Here your code
merged_dataframe <- anti_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframeanti <- anti_join(data1, data2, by = "Hospital")
View(merged_dataframeanti)
# Here your code
merged_dataframe1 <- inner_join(data1, data2, by = "Hospital")
# Here your code
merged_dataframe13 <- merge(data1, data2, by = "Hospital")
View(merged_dataframe13)
# Here your code
merged_dataframe6 <- semi_join(data1, data2, by = "Hospital")
View(merged_dataframe6)
data2a <- data2 %>%
arrange(-Profit)
print(data2a)
View(data2)
View(data2)
View(data2a)
data2a <- data2 %>%
arrange(desc(Profit))
print(data2a)
# Here your code
merged_dataframe1234 <- cbind(data1, data2a)
View(merged_dataframe1234)
View(Data)
View(data1)
View(data2a)
data1a <- data.frame(
Hospital = c("Giga"),
Revenue = c("1000")
)
print(data1a)
# Here your code
merged_dataframe <- rbind(data1a, data1)
# Here your code
merged_dataframe1111 <- rbind(data1a, data1)
data1a <- data.frame(
Hospital = c("Giga"),
Revenue = c("1000")
)
print(data1a)
# Here your code
dfSurvey2 <- read_excel("C:/Users/Martijn/Desktop/coding repositories/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet = 3, skip = 3)
dfSurvey2 <- dfSurvey2 %>% rename(Country =...1,`2019`= `2019...51`)
Data <- dfSurvey2 %>% select(1,43:51)
Data <- Data %>% slice_head(n = 5)
dfSurvey2
View(dfSurvey2)
# Here your code
df2 <- pivot_longer(Data, cols = `2011`:`2019`, names_to = "Year", values_to = "Expenditure")
df2
View(Data)
View(data2)
View(df2)
# Here your code
df2 <- pivot_longer(Data, cols = `2011`:`2019`, names_to = "Year", values_to = "Expenditure")
df2
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_path() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_path() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_path() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line()  + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_path() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_path() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line()  + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_path() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_line() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
df2$Year <- as.integer(df2$Year)
ggplot(df2, aes(x= Year, y = Expenditure, color = Country)) + geom_path() + scale_x_continuous(breaks = seq(2011, 2019, by = 1)) + theme_classic() + labs(x = ~"", y = "Expenditure per capita in ppp")
# Here your code
df3 <- df2 %>%
filter(Year== 2018 | Year == 2019)
df3
# Here your code
df4 <- df3 %>%
pivot_wider(names_from = Year, values_from = Expenditure)
df4
# Here your code
df5 <- df4 %>%
mutate(Growth = (`2019` - `2018`)/`2018`)
df5
ggplot(df5, aes(x =  -Growth), y = Growth, fill = Country)) +
ggplot(df5, aes(x =  -Growth), y = Growth, fill = Country) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth), y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = -Growth, y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth), y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = -Growth, y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = Country, y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
# Here your code
ggplot(df5, aes(x = reorder(Country, Growth), y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
# Here your code
ggplot(df5, aes(x = reorder(Country, -Growth), y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar() +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
View(df5)
View(df5)
View(OECD_Health_Statistics_2020_Frequently_Requested_Data)
View(OECD_Health_Statistics_2020_Frequently_Requested_Data)
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none")
+
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
# Here your code
library(tidyverse)
library(readxl)
# Here your code
ggplot(df5, aes(x = reorder(Country, -Growth), y = Growth, fill = Country)) +
geom_bar(stat = "identity") +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
ggplot(df5, aes(x = reorder(Country, -Growth) , y = Growth, fill = Country)) +
geom_col() +
theme_bw() +
theme(legend.position = "none") +
labs(x ="")
